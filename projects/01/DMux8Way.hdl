// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 *
 *  sel[2]  sel[1]  sel[0]  ||  a   b   c   d   e   f   g   h
 *  0       0       0       ||  in  0   0   0   0   0   0   0
 *  0       0       1       ||  0   in  0   0   0   0   0   0
 *  0       1       0       ||  0   0   in  0   0   0   0   0
 *  0       1       1       ||  0   0   o   in  0   0   0   0
 *  1       0       0       ||  0   0   o   0   in  0   0   0
 *  1       0       1       ||  0   0   o   0   0   in  0   0
 *  1       1       0       ||  0   0   o   0   0   0   in  0
 *  1       1       1       ||  0   0   o   0   0   0   0   in
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    DMux(in=in, sel=sel[2], a=split0, b=split1);
    DMux4Way(in=split0, sel=sel[0..1], a=a, b=b, c=c, d=d); // split0 contains a-d
    DMux4Way(in=split1, sel=sel[0..1], a=e, b=f, c=g, d=h); // split1 contains e-h
}